<UserControl x:Class="HockeyApp.AppLoader.Views.EditUserConfigurationView"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:HockeyApp.AppLoader.Views.Converters"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:util="clr-namespace:HockeyApp.AppLoader.Util"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="800"
             FocusManager.FocusedElement="{Binding ElementName=txtUsername}" >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources.xaml"/>
                <ResourceDictionary Source="MyIcons.xaml"/>
                <ResourceDictionary>
                    <converters:ConfigurableBooleanToVisibilityConverter
                        x:Key="BooleanToVisibilityConverter" 
                        True="Visible" 
                        False="Collapsed" />
                    <converters:ConfigurableBooleanToVisibilityConverter
                        x:Key="InvertedBooleanToVisibilityConverter" 
                        True="Collapsed" 
                        False="Visible" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="ListViewBackground"
                             Color="Transparent" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="10,10,10,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="300"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition Width="480"/>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ApiBase}" IsEnabled="False" Height="20" BorderBrush="{StaticResource TextboxBorderColorDarkTheme}"/>
        <TextBox Grid.Row="2" Grid.Column="1" 
                 Text="{Binding ConfigurationName,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True}" 
                 x:Name="txtConfigurationName" 
                 Controls:TextboxHelper.Watermark="Name of configuration" 
                 Controls:TextboxHelper.SelectAllOnFocus="True"
                 Height="20"
                 BorderBrush="{StaticResource TextboxBorderColorDarkTheme}"/>

        <CheckBox Grid.Column="2" Grid.Row="2" Content="Use as default" IsChecked="{Binding IsDefault}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Username}" Controls:TextboxHelper.Watermark="Email" Height="20"  BorderBrush="{StaticResource TextboxBorderColorDarkTheme}"/>
        <PasswordBox Grid.Column="1" x:Name="txtPassword" 
                     Grid.Row="4"
                     PasswordChanged="txtPassword_PasswordChanged"
                     Controls:TextboxHelper.Watermark="Password" Height="20"  KeyDown="txtPassword_KeyDown"  BorderBrush="{StaticResource TextboxBorderColorDarkTheme}"/>

        <!--
        <MenuItem Foreground="White" x:Name="Login" Header="Sign in" Height="28" Grid.Column="2" Grid.Row="4" HorizontalAlignment="Right"  />
        -->
        <Button Foreground="White" x:Name="Login" Content="Sign in" Grid.Column="2" Grid.Row="4" Width="98"  HorizontalAlignment="Right" VerticalAlignment="Center" />

        <Grid Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="2" Visibility="{Binding ShowGravatar, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <Image Source="{Binding Gravatar}" Grid.Column="0" Margin="1" Width="48" Height="48" Grid.RowSpan="2"/>
            <TextBlock Margin="10,0,0,0" Text="{Binding Name}" Grid.Column="1" VerticalAlignment="Center" FontSize="16" Foreground="White" Grid.Row="0"/>
            <TextBlock Margin="10,0,0,0" FontStyle="Italic" Text="Please double-click an API token to select it:" Grid.Column="1" VerticalAlignment="Center" FontSize="12" Foreground="White" Grid.Row="1"/>
        </Grid>

        <TextBlock Text="{Binding ErrorMessage}" Grid.Column="1" 
                   Grid.ColumnSpan="2"
                   Grid.Row="6" 
                   TextWrapping="Wrap"
                   Foreground="Red"
                   TextAlignment="Left"
                   VerticalAlignment="Top"
                   FontSize="16"
                   Visibility="{Binding IsError, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <ListView x:Name="lvApiTokens"
                  Grid.Column="1" 
                  Grid.ColumnSpan="2"
                  Grid.Row="7" 
                  ItemsSource="{Binding ApiTokens}"
                  Background="{StaticResource ListViewBackground}"
                  BorderThickness="1"
                  SelectionMode="Single" 
                  BorderBrush="{StaticResource TextboxBorderColorDarkTheme}"
                  MouseDoubleClick="lvApiTokens_MouseDoubleClick"
                  SelectedItem="{Binding SelectedApiToken}" Visibility="{Binding IsTokenAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding NameToDisplay}" Width="200"
                                    Header="Name" />
                    <GridViewColumn  DisplayMemberBinding="{Binding RightsDisplay}" Width="80"
                                    Header="Rights" />
                    <GridViewColumn  DisplayMemberBinding="{Binding Token}" Width="310"
                                    Header="Token" />
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>